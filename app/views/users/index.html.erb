<% total_expense_and_income = total_expense_and_income_of_year(Date.today) %>
<% all_year_expense_income = total_expense_and_income_of_all_year %>

<div class="row  border-bottom white-bg dashboard-header">
<div class="col-sm-8">
  <div class="ibox float-e-margins">
    <div class="ibox-title">
      <h5>Expense vs Income chart of current year
        <small> <%= Date.today.strftime("%Y") %> </small>
      </h5>
      <div ibox-tools></div>
    </div>
    <div class="ibox-content">
      <div>
        <canvas id="lineChartCurrentYearExpenseIncome" height="140"></canvas>
      </div>
    </div>
  </div>
</div>
<div class="col-sm-4 text-center">
  <h4>
     Total Expense and Income of <%= Date.today.strftime("%Y") %>
  </h4>
  <p>
   Expense :  <%= total_expense_and_income[:year_expense] %> Tk
  </p>
  <p>
    Income :  <%= total_expense_and_income[:year_income] %> Tk
  </p>
    <canvas id="doughnutChartOfYearlyExpenseIncome"></canvas>
    <h5 >Total Expense and Income of <%= Date.today.strftime("%Y")%> </h5>
  </div>
</div>

<div class="row  border-bottom white-bg dashboard-header">
  <div class="col-sm-5">
    <div class="ibox float-e-margins">
      <div class="ibox-title">
        <h5>Expense vs Income chart of all year
          <small> <%=  %> </small>
        </h5>
        <div ibox-tools></div>
      </div>
      <div class="ibox-content">
        <div>
          <canvas id="lineChartAllYearExpenseIncome" height="140"></canvas>
        </div>
      </div>
    </div>
  </div>
  <div class="col-sm-3 text-center">
    <h4>
      All Time Expense and Income
    </h4>
    <p>
      Expense :  <%= all_year_expense_income[:year_expense] %> Tk
    </p>
    <p>
      Income :  <%= all_year_expense_income[:year_income] %> Tk
    </p>
    <canvas id="doughnutChartOfAllYearlyExpenseIncome"></canvas>
    <h5 >Total Expense and Income</h5>
  </div>
  <div class="col-sm-4">
    <div class="profile-highlight">
      <span class="fa fa-bar-chart-o"></span>
      <small>Cash & Bank Balance Summary</small>
      <ul class="list-group clear-list m-t">
        <li class="list-group-item fist-item">
                                <span class="pull-right">
                                  <strong>
                                    <%= cash_entry = cash_bank_entry_out[:cash_entry] %> Tk
                                  </strong>
                                </span>
          <span class="label label-success"> <i class="fa fa-money"></i> </span> Total Cash In
        </li>
        <li class="list-group-item">
                                 <span class="pull-right">
                                   <strong>
                                     <%= cash_out = cash_bank_entry_out[:cash_out] %> Tk
                                   </strong>
                                </span>
          <span class="label label-info"> <i class="fa fa-money"></i> </span> Total Cash Out
        </li>
        <li class="list-group-item">
                                <span class="pull-right">
                                  <strong>
                                    <%= cash_entry - cash_out %> Tk
                                  </strong>
                                </span>
          <span class="label label-primary"> <i class="fa fa-money"></i> </span> Net cash
        </li>
        <li class="list-group-item fist-item">
                                <span class="pull-right">
                                  <strong>
                                    <%= bank_entry = cash_bank_entry_out[:bank_entry] %> Tk
                                  </strong>
                                </span>
          <span class="label label-success"> <i class="fa fa-money"></i> </span> Total Bank Balance In
        </li>
        <li class="list-group-item">
                                 <span class="pull-right">
                                   <strong>
                                     <%= bank_out = cash_bank_entry_out[:bank_out] %> Tk
                                   </strong>
                                </span>
          <span class="label label-info"> <i class="fa fa-money"></i> </span> Total Bank Balance Out
        </li>
        <li class="list-group-item">
                                <span class="pull-right">
                                  <strong>
                                    <%= bank_entry - bank_out %> Tk
                                  </strong>
                                </span>
          <span class="label label-primary"> <i class="fa fa-money"></i> </span> Net Bank Balance
        </li>

      </ul>


    </div>
  </div>
</div>

<%= javascript_tag "all_year_expense_income = #{all_year_expense_income.to_json.html_safe};" %>
<%= javascript_tag "total_expense_and_income_of_year = #{total_expense_and_income.to_json.html_safe};" %>
<%= javascript_tag "expense_and_income_of_year = #{expense_and_income_of_year(Date.today).to_json.html_safe};" %>
<%= javascript_tag "expense_and_income_of_all_year = #{expense_and_income_of_all_year.to_json.html_safe};" %>
<script>

    var white="rgba(255,255,255,1.0)";
    var fillBlack="rgba(45, 53, 60, 0.6)";
    var fillBlackLight="rgba(45, 53, 60, 0.2)";
    var strokeBlack="rgba(45, 53, 60, 0.8)";
    var highlightFillBlack="rgba(45, 53, 60, 0.8)";
    var highlightStrokeBlack="rgba(45, 53, 60, 1)";
    var fillBlue="rgba(52, 143, 226, 0.6)";
    var fillBlueLight="rgba(52, 143, 226, 0.2)";
    var strokeBlue="rgba(52, 143, 226, 0.8)";
    var highlightFillBlue="rgba(52, 143, 226, 0.8)";
    var highlightStrokeBlue="rgba(52, 143, 226, 1)";
    var fillGrey="rgba(182, 194, 201, 0.6)";
    var fillGreyLight="rgba(182, 194, 201, 0.2)";
    var strokeGrey="rgba(182, 194, 201, 0.8)";
    var highlightFillGrey="rgba(182, 194, 201, 0.8)";
    var highlightStrokeGrey="rgba(182, 194, 201, 1)";
    var fillGreen="rgba(0, 172, 172, 0.6)";
    var fillGreenLight="rgba(0, 172, 172, 0.2)";
    var strokeGreen="rgba(0, 172, 172, 0.8)";
    var highlightFillGreen="rgba(0, 172, 172, 0.8)";
    var highlightStrokeGreen="rgba(0, 172, 172, 1)";
    var fillPurple="rgba(114, 124, 182, 0.6)";
    var fillPurpleLight="rgba(114, 124, 182, 0.2)";
    var strokePurple="rgba(114, 124, 182, 0.8)";
    var highlightFillPurple="rgba(114, 124, 182, 0.8)";
    var highlightStrokePurple="rgba(114, 124, 182, 1)";

    // yearly line chart
    var lineDataa = {
        labels: expense_and_income_of_year.month_array,
        datasets: [
            {
                label: "Income",
                fillColor:fillGreen,
                strokeColor:strokeGreen,
                highlightFill:highlightFillGreen,
                highlightStroke:highlightStrokeGreen,
                pointColor: highlightStrokeGreen,
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: fillGreen,
                data: expense_and_income_of_year.monthly_income_array
            },
            {
                label: "Expense",
                fillColor:fillBlueLight,
                strokeColor:strokeBlue,
                highlightFill:highlightFillBlue,
                highlightStroke:highlightStrokeBlue,
                pointColor: highlightStrokeBlue,
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: fillBlue,
                data: expense_and_income_of_year.monthly_expense_array
            }
        ]
    };

    var lineOptionss = {
        scaleShowGridLines: true,
        scaleGridLineColor: "rgba(0,0,0,0.10)",
        scaleGridLineWidth: 1,
        bezierCurve: true,
        bezierCurveTension: 0.4,
        pointDot: true,
        pointDotRadius: 4,
        pointDotStrokeWidth: 1,
        pointHitDetectionRadius: 20,
        datasetStroke: true,
        datasetStrokeWidth: 2,
        datasetFill: true,
        responsive: true,
        multiTooltipTemplate: function(chartData) {return chartData.datasetLabel + " : " + chartData.value;},
        scaleLabel: function (valuePayload) {
            return Number(valuePayload.value) + 'Tk';
        }
    };
    var ctx = document.getElementById("lineChartCurrentYearExpenseIncome").getContext("2d");
    var myNewChart = new Chart(ctx).Line(lineDataa, lineOptionss);

    // yearly pie chart
    var doughnutData = [
        {
            value: total_expense_and_income_of_year.year_expense,
            color: "#b5b8cf",
            highlight: "#1ab394",
            label: "Expense",
            labelColor : 'white',
            labelFontSize: '16'
        },
        {
            value: total_expense_and_income_of_year.year_income,
            color: "#a3e1d4",
            highlight: "#1ab394",
            label: "Income",
            labelColor : 'white',
            labelFontSize: '16'

        }
    ];

    var doughnutOptions = {
        scaleShowLabels: true,
        segmentShowStroke: true,
        segmentStrokeColor: "#fff",
        segmentStrokeWidth: 2,
        percentageInnerCutout: 45, // This is 0 for Pie charts
        animationSteps: 100,
        animationEasing: "easeOutBounce",
        animateRotate: true,
        animateScale: false,
        tooltipTemplate: function(chartData) {return chartData.label + " : " + chartData.value;},
        scaleLabel: function (valuePayload) {
            return Number(valuePayload.value) + 'Tk';
        }
    };
    var ctx = document.getElementById("doughnutChartOfYearlyExpenseIncome").getContext("2d");
    var DoughnutChart = new Chart(ctx).Doughnut(doughnutData, doughnutOptions);

    // all year line chart
    var lineData = {
        labels: expense_and_income_of_all_year.year_array,
        datasets: [
            {
                label: "Income",
                fillColor:fillGreen,
                strokeColor:strokeGreen,
                highlightFill:highlightFillGreen,
                highlightStroke:highlightStrokeGreen,
                pointColor: highlightStrokeGreen,
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: fillGreen,
                data: expense_and_income_of_all_year.yearly_income_array
            },
            {
                label: "Expense",
                fillColor:fillBlueLight,
                strokeColor:strokeBlue,
                highlightFill:highlightFillBlue,
                highlightStroke:highlightStrokeBlue,
                pointColor: highlightStrokeBlue,
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: fillBlue,
                data: expense_and_income_of_all_year.yearly_expense_array
            }
        ]
    };


    var ctx = document.getElementById("lineChartAllYearExpenseIncome").getContext("2d");
    var myNewChart = new Chart(ctx).Line(lineData, lineOptionss);

    // all year pie chart
    var doughnutDataForAllYear = [
        {
            value: all_year_expense_income.year_expense,
            color: "#b5b8cf",
            highlight: "#1ab394",
            label: "Expense",
            labelColor : 'white',
            labelFontSize: '16'
        },
        {
            value: all_year_expense_income.year_income,
            color: "#a3e1d4",
            highlight: "#1ab394",
            label: "Income",
            labelColor : 'white',
            labelFontSize: '16'

        }
    ];
    var ctx = document.getElementById("doughnutChartOfAllYearlyExpenseIncome").getContext("2d");
    var DoughnutChart = new Chart(ctx).Doughnut(doughnutDataForAllYear, doughnutOptions);

</script>
